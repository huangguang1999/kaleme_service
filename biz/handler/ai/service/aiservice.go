// Code generated by hertz generator.

package service

import (
	"context"

	service "kaleme/biz/model/ai/service"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/openai/openai-go"
	"github.com/openai/openai-go/option"
)

// ProcessAIRequest .
// @router /ai [GET]
func ProcessAIRequest(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.AIInfoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(service.AIInfoResponse)

	c.JSON(consts.StatusOK, resp)
}

// ProcessAIInfo .
// @router /ai/info [POST]
func ProcessAIInfo(ctx context.Context, c *app.RequestContext) {
	hlog.Info("开始处理请求")
	var req service.AIInfoRequest
	err := c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	// 使用固定的API密钥而不是从环境变量获取
	client := openai.NewClient(
		option.WithAPIKey("6ovtrsdgs1i9k5IX3WqFkV53qYbhkCmpJX688tZ4SmLn4ivDooNz9jLcCBH4TDvtx"),
		option.WithBaseURL("https://api.stepfun.com/v1"),
		option.WithRequestTimeout(60),
	)

	// 创建聊天完成请求参数
	params := openai.ChatCompletionNewParams{
		Model: "step-1v-8k",
	}

	// 使用option.WithJSONSet设置自定义消息格式
	options := []option.RequestOption{
		option.WithJSONSet("messages", []interface{}{
			map[string]interface{}{
				"role":    "system",
				"content": "你是一位专业的美食识别与能量分析专家，能够依据用户提供的食物图片，精准判断其中美食的名称，并详细给出该美食的能量组成。",
			},
		}),
	}

	// 如果提供了图片URL，则添加包含图片的用户消息
	if req.ImageURL != "" {
		// 添加带有图片URL的用户消息
		userMessage := map[string]interface{}{
			"role": "user",
			"content": []map[string]interface{}{
				{
					"type": "text",
					"text": "输出图片中食物名字和能量",
				},
				{
					"type": "ImageURL",
					"ImageURL": map[string]string{
						"url": req.ImageURL,
					},
				},
			},
		}
		options = append(options, option.WithJSONSet("messages.1", userMessage))
	} else {
		// 如果没有图片URL，则只添加文本内容
		options = append(options, option.WithJSONSet("messages.1", map[string]interface{}{
			"role":    "user",
			"content": "你是一位专业的美食识别与能量分析专家，能够依据用户提供的食物图片，精准判断其中美食的名称，并详细给出该美食的能量组成。",
		}))
	}

	// 创建聊天完成请求
	chatCompletion, err := client.Chat.Completions.New(context.Background(), params, options...)
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	resp := new(service.AIInfoResponse)
	resp.RespBody = chatCompletion.Choices[0].Message.Content
	c.JSON(consts.StatusOK, resp)
}
